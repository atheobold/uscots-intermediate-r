{
  "hash": "7b08bbf2aea69bb08a2c6f2f16a77c77",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: \n  revealjs:\n    footer: \"[Teaching Intermediate R](https://github.com/atheobold/uscots-intermediate-r)\"\n    theme: [simple, styles.scss]\n    embed-resources: true\neditor: source\n---\n\n\n\n\n##  {background-image=\"images/06-snow-dashboard.png\" background-position=\"center\" background-size=\"cover\" aria-label=\"Two cute cartoon penguins stand facing each other. The blue penguin on the left is raising one flipper, appearing to toss or launch a glowing, comet-like object with the Quarto logo on it. The orange penguin on the right looks up happily at the flying object.\"}\n\n::: {style=\"font-size: 2.5em; color: #000000;\"}\nQuarto Dashboards\n:::\n\n## Creating a Quarto Dashboard\n\n::: {.midi}\nTo create a dashboard you need to use `format: dashboard` in the YAML:\n:::\n\n```{.bash filename=\"dashboard.qmd\"}\n--- \ntitle: \"Palmer Penguins\"\nauthor: \"Cobblepot Analytics\"\nformat: dashboard\n---\n```\n\n. . .\n\n::: {.midi}\nWe can add futher details to the dashboard:\n:::\n\n```{.bash filename=\"dashboard.qmd\"}\n--- \ntitle: \"Palmer Penguins\"\nauthor: \"Cobblepot Analytics\"\nformat: \n  dashboard:\n    logo: images/penguins.png\n    nav-buttons: [linkedin, twitter, github]\n---\n```\n\n\n## Quarto Dashboard Components\n\n</br>\n\n::: {.incremental}\n1. Navigation Bar â€” Icon, title, author, links to sub-pages\n\n<!-- Subpages contain additional content -->\n\n2. Pages, Rows, Columns, and Tabsets \n\n<!-- Pages, rows and columns are defined using markdown headings (with optional attributes to control height, width, etc.). Tabsets can be used to further divide content within a row or column. -->\n\n3. Cards, Sidebars, and Toolbars \n\n<!-- Cards are containers for plots, data display, and free form content. The content of cards typically maps to cells in your notebook or source document. Sidebars and toolbars are used to present inputs within interactive dashboards. -->\n\n:::\n\n# Static Dashboards\n\n## {background-iframe=\"https://mine.quarto.pub/olympic-games-py/\"}\n\n\n## Layout\n\n::: columns\n::: {.column width=\"40%\"}\n```{.bash filename=\"dashboard.qmd\"}\n---\ntitle: \"Palmer Penguins\"\nauthor: \"Cobblepot Analytics\"\nformat: dashboard\n---\n    \n## Row {height=70%}\n\n::: {.cell}\n\n:::\n\n## Row {height=30%}\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n```\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"55%\"}\n![](images/06-quarto-layout.png){fig-alt=\"A schematic of a page layout showing Chart 1 at the top using the full page width, then Chart 2 and Chart 3 side by side in a row below it.\"}\n:::\n:::\n\n<!-- Here, level 2 markdown headings (e.g. ## Row {height=70%}) define the contents of rows as well as their relative height. The ```{python} code cells in turn automatically create cards that are laid out in columns within the row. -->\n\n# The Middle Child (Part Static, Part Dynamic)\n\n## {background-iframe=\"https://nasoares.quarto.pub/wellcome-global-monitor-2018\"}\n\n- gganimate\n- leaflet\n\n## {background-iframe=\"https://stat541.visruth.com/static_dashboard\"}\n\n- leaflet\n- plotly\n\n# Dynamic Dashboard\n\n## {background-iframe=\"https://jjallaire.shinyapps.io/penguins-dashboard/\"}\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}