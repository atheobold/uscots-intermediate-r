{
  "hash": "d0f8c5a60673ea849af55215d3632214",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Professional Data Visualization\"\nsubtitle: \"Beyond Basic ggplot2\"\nformat: \n  revealjs:\n    footer: \"[USCOTS Intermediate R Workshop](https://atheobold.github.io/uscots-intermediate-r/)\"\n    theme: [simple, styles.scss]\n    embed-resources: true\neditor: source\n---\n\n## Why Professional Data Visualization?\n\nMoving from \"making plots\" to \"effective communication\":\n\n::: {.incremental}\n- **Process vs. Product**: Teaching students to evaluate their own work\n- **Advanced techniques**: Extensions, theming, interactivity\n- **Professional standards**: Publication-ready graphics\n- **Assessment strategies**: Clear grading principles\n:::\n\n. . .\n\n::: {style=\"font-size: 1.2em; color: #0F4C81;\"}\nToday: Teaching tools and principles for professional data visualization\n:::\n\n## Learning Objectives\n\nBy the end of this session, you will:\n\n::: {.incremental}\n1. Understand grading principles for \"good\" data visualization (process vs. product)\n2. Know current ggplot2 extensions and advanced theming techniques\n3. Be familiar with interactive visualization tools (plotly, htmlwidgets)\n:::\n\n. . .\n\n::: {style=\"font-size: 1.1em; color: #2E7D32;\"}\n**Focus: Comprehensive resources to teach professional data visualization**\n:::\n\n# Grading Principles {background-color=\"#0F4C81\"}\n\n## Process vs. Product Assessment\n\nTeaching visualization requires evaluating **both**:\n\n::: {.incremental}\n- **Process**: Design thinking, iteration, justification\n- **Product**: Technical execution, clarity, aesthetics\n- **Reflection**: Understanding of design choices\n- **Critique**: Ability to evaluate others' work\n:::\n\n. . .\n\n::: {style=\"font-size: 1.1em; color: #2E7D32;\"}\n**Goal: Students learn to self-assess and improve**\n:::\n\n## What Makes a \"Good\" Visualization?\n\n::: {.midi}\n**Technical Accuracy:**\n- Appropriate chart type for data\n- Correct use of scales and axes\n- Accurate representation of relationships\n\n**Design Principles:**\n- Clear, informative titles and labels\n- Appropriate color choices and accessibility\n- Effective use of visual hierarchy\n- Minimal cognitive load\n\n**Communication:**\n- Clear message or insight\n- Appropriate for target audience\n- Context and interpretation provided\n:::\n\n## Grading Rubric Framework\n\n::: {.small}\n| **Criteria** | **Excellent (4)** | **Good (3)** | **Needs Work (2)** | **Poor (1)** |\n|:-------------|:------------------|:-------------|:-------------------|:-------------|\n| **Chart Type** | Clear match for data & message | Appropriate choice | Questionable fit | Wrong choice |\n| **Design** | Clear, polished, accessible | Good design principles | Some issues | Many problems |\n| **Message** | Clear, compelling insight | Good communication | Unclear message | No clear point |\n| **Process** | Shows iteration & reflection | Evidence of thinking | Some documentation | No process shown |\n:::\n\n::: {style=\"font-size: 0.9em; color: #666;\"}\n**Teaching Tip:** Have students grade example visualizations using your rubric before using it on their own work\n:::\n\n## Assessment Strategies for Teaching\n\n::: {.midi}\n**Formative Assessment:**\n- Sketch-to-code exercises (hand-drawn â†’ ggplot2)\n- Peer critique sessions with guided questions\n- \"Fix this plot\" exercises with problematic examples\n\n**Summative Assessment:**\n- Portfolio of visualizations with process documentation\n- Before/after redesign projects\n- Group presentation of visualization choices\n\n**Self-Assessment Tools:**\n- Checklist for visualization quality\n- Reflection prompts about design decisions\n- Comparison with professional examples\n:::\n\n## Teaching Resources for Assessment\n\n::: {.small}\n**Rubric Examples:**\n- [Penn State Data Visualization Rubric](https://libraries.psu.edu/about/departments/research-informatics-and-publishing/data-learning-center/data-visualization-1) - Award judging criteria\n- [Georgetown Assessment Guide](https://guides.library.georgetown.edu/c.php?g=75874&p=490360) - Student evaluation framework\n- [ASA Poster Judging Rubric](https://www.amstat.org/asa/files/pdfs/EDU-PosterJudgingRubric.pdf) - Professional standards\n\n**Design Principle Resources:**\n- Alberto Cairo's \"The Truthful Art\" - Comprehensive visualization principles\n- Edward Tufte's principles - Classic design guidelines  \n- Claus Wilke's \"Fundamentals of Data Visualization\" - Modern, R-focused approach\n\n**Teaching Examples:**\n- [UMass Visualization Assessment](https://scholarworks.umass.edu/cgi/viewcontent.cgi?article=1073&context=librarian_pubs) - Academic research\n- [IU Visualization Rubric](https://scholarworks.iu.edu/dspace/bitstream/handle/2022/16814/VisualizationAssessmentRubric.pdf) - Complete framework\n:::\n\n# ggplot2 Extensions {background-color=\"#0F4C81\"}\n\n## The Extension Ecosystem\n\nggplot2 is designed to be extensible:\n\n::: {.incremental}\n- **50+ extension packages** for specialized needs\n- **Consistent grammar** across extensions\n- **Professional-quality** output\n- **Active development** community\n:::\n\n. . .\n\n::: {style=\"font-size: 1.1em; color: #2E7D32;\"}\n**Teaching advantage: Students learn one grammar, unlock dozens of tools**\n:::\n\n## Essential Extensions for Teaching\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install key extensions\npak::pak(c(\"patchwork\", \"gganimate\", \"ggtext\", \n           \"ggforce\", \"ggh4x\", \"ggrepel\", \"palmerpenguins\"))\n\n# Core packages\nlibrary(ggplot2)\nlibrary(palmerpenguins)\nlibrary(patchwork)  # Combining plots\nlibrary(gganimate)  # Animations  \nlibrary(ggtext)     # Enhanced text\n```\n:::\n\n\n## Patchwork: Combining Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create individual plots\np1 <- penguins %>% \n  ggplot(aes(bill_length_mm, body_mass_g, color = species)) + \n  geom_point()\n\np2 <- penguins %>% \n  ggplot(aes(species)) + \n  geom_bar()\n\n# Combine with operators\np1 + p2           # Side by side\np1 / p2           # Stacked\n(p1 + p2) / p3    # Complex layouts\n```\n:::\n\n\n::: {.midi}\n**Teaching value**: Students learn composition principles and complex figure creation for publications\n:::\n\n## gganimate: Bringing Data to Life\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gapminder)\n\n# Create animated plot\ngapminder %>%\n  ggplot(aes(gdpPercap, lifeExp, size = pop, color = continent)) +\n  geom_point(alpha = 0.7) +\n  scale_x_log10() +\n  # Animation components\n  transition_time(year) +\n  labs(title = \"Year: {closest_state}\")\n```\n:::\n\n\n::: {style=\"font-size: 0.9em; color: #666;\"}\n**Student Exercise**: Create before/after static vs. animated versions to show communication differences\n:::\n\n## ggtext: Professional Text Formatting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggtext)\n\npenguins %>%\n  ggplot(aes(bill_length_mm, body_mass_g, color = species)) +\n  geom_point() +\n  labs(\n    title = \"Bill length vs. **Body mass**\",\n    subtitle = \"Data colored by <span style='color:blue;'>penguin species</span>\",\n    caption = \"*Source: Palmer Station Antarctica LTER*\"\n  ) +\n  theme(\n    plot.title = element_markdown(),\n    plot.subtitle = element_markdown(),\n    plot.caption = element_markdown()\n  )\n```\n:::\n\n\n## Advanced Theming Techniques\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Custom theme for consistency\nmy_theme <- theme_minimal() +\n  theme(\n    text = element_text(family = \"Arial\"),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    panel.grid.minor = element_blank(),\n    legend.position = \"bottom\"\n  )\n\n# Apply to all plots\ntheme_set(my_theme)\n```\n:::\n\n\n::: {style=\"font-size: 0.9em; color: #666;\"}\n**Teaching Strategy**: Have students develop their own theme as a semester project\n:::\n\n## ggplot2 Extension Teaching Resources\n\n::: {.small}\n**Comprehensive Guides:**\n- [Awesome ggplot2](https://github.com/erikgahner/awesome-ggplot2) - Curated list of extensions and tutorials\n- [ggplot2 Extensions Gallery](https://exts.ggplot2.tidyverse.org/) - Official showcase with examples\n- [Albert Rapp's Extension Guide](https://albert-rapp.de/posts/ggplot2-tips/20_ggplot_extensions/ggplot_extensions) - 5 powerful extensions tutorial\n- [Data Visualization Conservation Book](https://bookdown.org/gavinmasterson/dvfc/extensions-of-ggplot2.html) - Academic session on extensions\n\n**Package-Specific Resources:**\n- [Patchwork Documentation](https://patchwork.data-imaginist.com/) - Complete guide to plot composition\n- [gganimate Documentation](https://gganimate.com/) - Animation tutorials and examples\n- [ggtext Package Guide](https://wilkelab.org/ggtext/) - Enhanced text formatting\n\n**Teaching Materials:**\n- [Mode Analytics Extension Guide](https://mode.com/blog/r-ggplot-extension-packages/) - 12 extensions for more powerful visualizations\n- [InfoWorld ggplot Extensions](https://www.infoworld.com/article/2336125/12-ggplot-extensions-for-snazzier-r-graphics.html) - Practical examples\n- [Medical Research Extensions](https://bookdown.org/pdr_higgins/rmrwr/extensions-to-ggplot.html) - Domain-specific applications\n:::\n\n# Interactive Visualization {background-color=\"#0F4C81\"}\n\n## Why Interactive Visualization?\n\nInteractive plots enable:\n\n::: {.incremental}\n- **Exploration**: Users can discover patterns themselves\n- **Engagement**: More compelling than static plots\n- **Detail**: Tooltips and zoom for complex data\n- **Storytelling**: Guided narratives through data\n:::\n\n. . .\n\n::: {style=\"font-size: 1.1em; color: #2E7D32;\"}\n**Teaching opportunity: Students learn both exploration and communication**\n:::\n\n## The htmlwidgets Ecosystem\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install interactive packages\npak::pak(c(\"plotly\", \"DT\", \"leaflet\", \"ggiraph\"))\n\n# Core interactive tools\nlibrary(plotly)     # Interactive plots\nlibrary(DT)         # Interactive tables\nlibrary(leaflet)    # Interactive maps\nlibrary(ggiraph)    # Interactive ggplot2\n```\n:::\n\n\n::: {.midi}\n**htmlwidgets**: R bindings to JavaScript libraries that work in multiple contexts (console, RStudio, Rmarkdown, Shiny)\n:::\n\n## From ggplot2 to plotly\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create ggplot\np <- penguins %>%\n  ggplot(aes(bill_length_mm, body_mass_g, \n             color = species, text = paste(\"Species:\", species))) +\n  geom_point(size = 3) +\n  labs(title = \"Bill Length vs. Body Mass\")\n\n# Make it interactive\nggplotly(p, tooltip = \"text\")\n```\n:::\n\n\n::: {style=\"font-size: 0.9em; color: #666;\"}\n**Teaching Win**: Students can make existing ggplot2 plots interactive with one function call\n:::\n\n## Custom plotly Interactions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Native plotly syntax\nplot_ly(penguins, x = ~bill_length_mm, y = ~body_mass_g, color = ~species,\n        text = ~paste(\"Species:\", species), \n        hovertemplate = \"%{text}<br>Bill Length: %{x}mm<br>Body Mass: %{y}g\") %>%\n  add_markers(size = ~bill_depth_mm) %>%\n  layout(title = \"Interactive Penguin Data\",\n         xaxis = list(title = \"Bill Length (mm)\"),\n         yaxis = list(title = \"Body Mass (g)\"))\n```\n:::\n\n\n## ggiraph: Interactive ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggiraph)\n\n# Add interactivity to ggplot2\np <- penguins %>%\n  ggplot(aes(bill_length_mm, body_mass_g, \n             tooltip = paste(\"Species:\", species),\n             data_id = species)) +\n  geom_point_interactive(aes(color = species), size = 3) +\n  theme_minimal()\n\n# Render as interactive\ngirafe(ggobj = p)\n```\n:::\n\n\n::: {style=\"font-size: 0.9em; color: #666;\"}\n**Student-Friendly**: Uses familiar ggplot2 syntax with `_interactive` suffix\n:::\n\n## Interactive Visualization Teaching Resources\n\n::: {.small}\n**Comprehensive Learning:**\n- [Interactive Web-based Data Visualization with R](https://plotly-r.com/) - Complete plotly R guide\n- [DataCamp Plotly Course](https://www.datacamp.com/courses/interactive-data-visualization-with-plotly-in-r) - Structured learning path\n- [Plotly R Documentation](https://plotly.com/r/) - Official reference and examples\n\n**htmlwidgets Ecosystem:**\n- [htmlwidgets.org](http://www.htmlwidgets.org/) - Gallery of available packages\n- [Interactive Widgets in R](https://www.datanovia.com/learn/interactive/r/widgets.html) - Comprehensive guide\n- [University of Sheffield Guide](https://dataviz.shef.ac.uk/blog/27/01/2021/Interactive-Visualisations-In-R/) - Academic perspective\n\n**Teaching-Specific Resources:**\n- [GeeksforGeeks Plotly Tutorial](https://www.geeksforgeeks.org/interactive-charts-using-plotly-in-r/) - Step-by-step examples\n- [ggiraph Documentation](https://davidgohel.github.io/ggiraph/) - Interactive ggplot2 extensions\n- [Linking Multiple Widgets](https://plotly-r.com/linking-views-without-shiny.html) - Advanced techniques\n\n**Integration Examples:**\n- Saving and embedding HTML widgets in reports\n- Using interactive plots in Rmarkdown documents\n- Combining multiple widgets for dashboards\n:::\n\n## Course Integration Strategies\n\n::: {.midi}\n**Scaffolded Learning Approach:**\n\n1. **Week 1-2**: ggplot2 fundamentals and design principles\n2. **Week 3-4**: Extensions (patchwork, themes, ggtext)\n3. **Week 5-6**: Animation with gganimate\n4. **Week 7-8**: Interactive visualization with plotly\n\n**Assessment Progression:**\n- Start with static plot improvement exercises\n- Move to extension-based enhancement projects\n- Culminate with interactive storytelling assignments\n- Portfolio showing evolution from basic to professional\n:::\n\n## Professional Development Resources\n\n::: {.small}\n**Visualization Theory & Principles:**\n- [Claus Wilke's \"Fundamentals of Data Visualization\"](https://clauswilke.com/dataviz/) - Modern, comprehensive guide\n- [Alberto Cairo's \"The Truthful Art\"](http://www.thefunctionalart.com/p/the-truthful-art-book.html) - Ethics and principles\n- [Edward Tufte's Works](https://www.edwardtufte.com/) - Classic visualization theory\n\n**R-Specific Advanced Techniques:**\n- [ggplot2: Elegant Graphics for Data Analysis](https://ggplot2-book.org/) - Hadley Wickham's comprehensive guide\n- [R Graphics Cookbook](https://r-graphics.org/) - Practical solutions\n- [Data Visualization: A Practical Introduction](https://socviz.co/) - Sociology perspective with R\n\n**Teaching Methodology:**\n- [Data Science Education Resources](https://datasciencebox.org/) - Complete course framework\n- [Teaching Data Science](https://teachdatascience.com/) - Pedagogical approaches\n- [Journal of Statistics Education](https://www.tandfonline.com/toc/ujse20/current) - Academic research on teaching\n:::\n\n## Assessment Ideas for Data Visualization\n\n::: {.midi}\n**Portfolio-Based Assessment:**\n- Document design process with sketches and iterations\n- Include both static and interactive versions\n- Reflect on design choices and improvements\n- Show progression from basic to advanced techniques\n\n**Peer Review Exercises:**\n- Students critique each other's work using provided rubrics\n- \"Makeover Monday\" style redesign challenges\n- Group discussions about effective vs. ineffective examples\n\n**Real-World Applications:**\n- Create visualizations for local organizations\n- Analyze and improve published visualizations\n- Present findings to non-technical audiences\n:::\n\n## Activity: Design Your Visualization Curriculum\n\n::: {.midi}\n**In small groups (15 minutes):**\n\n1. **Choose your course context** (intro stats, advanced R, domain-specific)\n2. **Map learning progression**: What visualization skills build on each other?\n3. **Select key extensions**: Which ggplot2 extensions fit your goals?\n4. **Design assessment strategy**: How will you evaluate both process and product?\n5. **Plan integration**: How do visualizations connect to other course content?\n\n**Be ready to share your approach and receive feedback!**\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}